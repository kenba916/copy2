@import url('https://fonts.googleapis.com/css2?family=hoge');
$font-family-english: 'Lato', sans-serif; 

.section-title,
.header-nav,
.news-more,
.button,
.footer-nav,
.footer-copyright {
  font-family: $font-family-english;
}

$color-main: #3F51B5;
$color-accent: #E81919;
$color-text: #333333;

$layout-width-inner: 1200px;


$breakpoints: (
    "sp": "(max-width: 767px)",
    "tab": "(min-width: 768px) and (max-width: #{$layout-width-inner - 1px})",
    "pc": "(min-width: #{$layout-width-inner})",
);

@mixin mq($breakpoint: sp) {
    @media #{map-get($breakpoints, $breakpoint)}{
        @content;
    }
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

html,
body {
    padding: 0;
    margin: 0;
}

body {
    font-family: "游ゴシック体", YuGothic, "游ゴシック Medium", "Yu Gothic Medium", "游ゴシック", "Yu Gothic", sans-serif;
    font-size: 16px;
    line-height: 1.6;
    background: #fff;
    color: $color-text;
}

img {
    max-width: 100%;
    height: auto;
}

ul,
ol {
    list-style: none;
    margin: 0;
    padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: 0;
    padding: 0;
}

a {
    color: inherit; //親要素の色を受け継ぐ
    // text-decoration: none;
    cursor: pointer;
}

.inner {
    width: $layout-width-inner;
    max-width: 100%;
    margin: 0 auto;

    @include mq('tab') {
        padding-left: 24px;
        padding-right: 24px;
    }

    @include mq('sp') {
        padding-left: 24px;
        padding-right: 24px;
    }
}

// .container {
//     width: 90%;
//     max-width: 1200px;
//     margin: auto;
// }

.section {
    padding: 80px 0 120px;

    @include mq('sp') {
        padding: 50px 0 60px;
    }
}

.section-title {
    //fw700
    font-weight: 700;
    //fz47
    font-size: 40px;
    //tac
    text-align: center;
    padding-bottom: 14px;
    position: relative;

    &::after {
        content: "";
        //poa
        position: absolute;
        //左右中央↓
        left: 50%;
        //Xで横軸
        transform: translateX(-50%);
        //要素の下にする
        bottom: 0;
        background-color: $color-main;
        height: 4px;
        width: 60px;

        @include mq ('sp') {
            width: 42px;
            height: 3px;
        }
    }

    @include mq ('sp') {
        font-size: 26px;
        padding-bottom: 18px;
    }
}

.button {
    margin-top: 30px;
    margin-bottom: 18px;
    transition: all 0.3s ease 0s;

    &:hover {
        opacity: 0.7;
    }

    @include mq('sp') {
        margin-top: 20px;
    }

    a {
        display: inline-block;
        width: 382px;
        max-width: 100%;
        height: 72px;
        line-height: 72px;
        font-size: 24px;
        font-weight: 700;
        text-align: center;
        color: #fff;
        background: $color-main;
        border-radius: 12px;
        box-shadow: 0 3px 6px rgba(#000, 0.16);
        text-decoration: none;


        @include mq('sp') {
            width: 280px;
            height: 60px;
            line-height: 60px;
            font-size: 18px;
        }
    }
}

/*=========================
header
=========================*/

.header {
    background: $color-main;
    height: 100px;
    position: fixed;
    //fixed にすると幅がなくなるから ↓ で幅指定
    width: 100%;
    // top と left を指定しないと header が hero の mt: 100px;分（ヘッダーサイズ分）ずれる
    top: 0;
    left: 0;
    box-shadow: 0 3px 3px rgba(#000, 0.16);
    z-index: 3;
    

    @include mq ('sp') {
        height: 60px;
    }
}

.header-inner {
    display: flex;
    justify-content: center;
    //高さを中央にする方法
    height: inherit;
    align-items: center;
}

.header-logo {
    width: 205px;

    //インラインブロックで画像の余分な隙間とかの不具合をなくせる
    img {
        display: block;
    }
}

.header-nav {
    display: flex;
    margin-left: auto;

    

    @include mq('sp') {
        display: none;
    }

    li {

        //最初の要素には適用させない方法
        &:not(:first-child) {
            margin-left: 34px;
        }
        
        a{
            color: #fff;
            text-decoration: none;
            position: relative;
            
            

            &::after {
                position: absolute;
                content: '';
                bottom: -10px;
                left: 0;
                width: 0;
                height: 2px;
                background: $color-accent;
                transition: all 0.3s ease 0s;
                }
          
            &:hover {
                cursor: pointer;
          
                &::after {
                width: 100%;
                }
            }


            &.is-active {
                &::after {
                    content: "";
                    position: absolute;
                    left: 0;
                    bottom: -10px;
                    width: 100%;
                    height: 2px;
                    background: $color-accent;
                }
            }
        }
    }
}



/*=========================
hero
=========================*/
.hero {
    width: 100%;
    height: 600px;
    // height: 100vh;
    background: url(../img/mainvisual.png) no-repeat center center / cover;
    position: relative;
    margin-top: 100px;

    @include mq ('sp') {
        margin-top: 60px;
        height: 500px;
    }
}

.hero-content {
    position: absolute;
    //absoluteのときの幅に注意
    width: 100%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;

    @include mq('sp') {
        padding: 0 40px;
    }
}

.hero-title {
    font-size: 64px;
    font-weight: 700;

    @include mq('sp') {
        font-size: 30px;
    }
}

.hero-lead {
    font-size: 24px;
    font-weight: 700;
    margin-top: 6px;

    @include mq('sp') {
        font-size: 18px;
        margin-top: 10px;
    }
}

.hero-button {
    margin-top: 20px;
}


//slider
.swiper-container-horizontal>.swiper-scrollbar {
    display: none;
}

.swiper-button-prev {
    width: 40px;
    height: 40px;
    margin-top: -20px;
    background: transparent url(../img/arrow-prev.svg) no-repeat center center / contain;

    //paginationの位置の指定
    left: calc(50% - #{$layout-width-inner / 2});

    &::after {
        display: none;
    }

    @include mq('tab') {
        left: 10px;
    }

    @include mq('sp') {
        left: 10px;
        width: 30px;
        height: 30px;
    }
}

.swiper-button-next {
    width: 40px;
    height: 40px;
    margin-top: -20px;
    background: transparent url(../img/arrow-next.svg) no-repeat center center / contain;

    //paginationの位置の指定
    right: calc(50% - #{$layout-width-inner / 2});

    &::after {
        display: none;
    }

    @include mq('tab') {
        right: 10px;
    }

    @include mq('sp') {
        right: 10px;
        width: 30px;
        height: 30px;
    }
}

.swiper-pagination-bullet {
    width: 16px;
    height: 16px;
    background: #FFFFFF9E;
    opacity: 1;

    @include mq('sp') {
        width: 12px;
        height: 12px;
    }
}

.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet {
    margin: 0 6px;
}

.swiper-pagination-bullet-active {
    background: #2F7DC8;
}


/*=========================
card
=========================*/

.card {
    background: #EFEFEF;
    padding: 80px 0 60px;
}

.card-inner {

}

.card-head {
    
}

// .slide2 {
//     padding-bottom: 60px;
// }

// .prev2,
// .next2 {
//     width: 16px;
//     height: 20px;
//     top: auto;
// 	bottom: 15px;
// 	margin: 0;
// }

// .prev2 {
// 	right: calc(50% + 34px);
// 	left: auto;
// 	background: url(../img/arrow-prev-card.svg) no-repeat center center / contain;

//     @include mq('sp') {
//         right: calc(50% + 80px);
//     }
// }

// .next2 {
// 	right: auto;
// 	left: calc(50% + 34px);
// 	background: url(../img/arrow-next-card.svg) no-repeat center center / contain;
    
//     @include mq('sp') {
//         left: calc(50% + 80px);
//     }
// }




.card-items {
    margin-top: 80px;
    //df
    display: flex;
    //要素の改行
    flex-wrap: wrap;

    @include mq ('sp') {
        margin-top: 42px;
    }
}

.card-item {
    //3分割してその余白を与える
    width: calc(33.3% - 24px * 2 / 3);
    // width: 100%;
    background: #fff;
    padding: 16px;
    border-radius: 4px;
    

    //余白の指示がレスポンシブとダブルから pc として指定
    @include mq('pc') {

        // 3の倍数+1以外のパーツに指示（一番左にだけ ml を当てないようにする）
        &:not(:nth-child(3n + 1)) {
        margin-left: 24px;
        }
    
        // 4つ目以降にだけ mt を当てる
        &:nth-child(n + 4) {
           margin-top: 24px;
        }
    }
    

    @include mq('tab') {
        width: calc(50% - 24px * 1 / 2);
        // width: 100%;

        &:not(:nth-child(2n + 1)) {
            margin-left: 24px;
        }

        &:nth-child(n + 3) {
            margin-top: 24px;
        }
    }

    @include mq('sp') {
        width: 100%;
        margin-left: 0;

        &:nth-child(n + 2) {
            margin-top: 24px;
        }
    }
}

.card-img {

    img {
        width: 100%;
    }
}

.card-title {
    font-size: 20px;
    font-weight: 700;
    color: #6F7579;
    margin-top: 4px;
}

.card-text {
    color: #6F7579;
    font-weight: 700;
    line-height: (24 / 16);
    margin-top: 4px;
}


/*=========================
News
=========================*/

.news {
    background: white;
}

.news-inner {

}

.news-head {
    
}

.news-items {
    margin: 60px auto 0;
    width: 800px;
    max-width: 100%;

    @include mq('sp') {
        margin: 40px auto 0;
    }
}

.news-item {
    display: flex;
    padding: 20px 0 12px;

    &:not(:first-child) {
        border-top: #707070 solid 1px;
    }

    @include mq('sp') {
        display: block;
    }
}

.news-meta {
    display: flex;
    //日付とラベルの合計
    width: 185px;
}

.news-date {
    //文字と右の余白分
    width: 105px;
    padding-top: 3px;
}

.news-label {
    a {
        display: inline-block;
        width: 80px;
        height: 32px;
        //inlineの上下中央
        line-height: 32px;
        color: #fff;
        text-align: center;
        background-color: #666666;
        border-radius: 4px;
        font-weight: 700;
        text-decoration: none;

        transition: all 0.3s ease 0s;

        &:hover {
            opacity: 0.7;
        }

        &.is-blue {
            background: $color-main;
        }

        &.is-red {
            background: $color-accent;
        }
    }
}

.news-title {
    width: calc(100% -185px);
    padding-left: 20px;
    padding-top: 3px;

    a {
        text-decoration: none;
        line-height: (20 / 16);
    }

    @include mq('sp') {
        width: 100%;
        padding-left: 0;
        padding-top: 0;
        margin-top: 6px;
    }
}

.news-more {
    margin-top: 37px;
    text-align: center;

    a {
        text-decoration: none;
        color: $color-accent;
        font-weight: 700;
        padding-right: 14px;
        position: relative;
        transition: all 0.3s ease 0s;


        &:hover {
            opacity: 0.7;
        }

        &::after {
            content: "";
            position: absolute;
            width: 7px;
            height: 11px;
            right: 0;
            top: 50%;
            transform: translateY(-50%);
            background: url(../img/news-arrow.svg) no-repeat center center / contain;
            margin-top: 2px;
        }
    }

    @include mq('sp') {
        margin-top: 30px;
    }
}


/*=========================
price
=========================*/

.price {
    background: #EFEFEF;
}

.price-inner {

}

.price-head {

}

.price-content {
    margin-top: 80px;
    display: flex;

    @include mq('sp') {
        margin-top: 40px;
        display: block;
    }
}

.price-left {

}

.price-img {
    //leftの幅の％で指定 → 幅の固定
    width: 454 / 1200 * 100%;
    height: auto;

    @include mq ('sp') {
        width: 100%;
        text-align: center;
    }

    img {

    }
}

.price-table {
    width: 738 / 1200 * 100%;
    margin-left: auto;

    @include mq ('sp') {
        margin-top: 20px;
        width: 100%;
    }
}

.table {
    //tableに起こる2重線をなくすため
    border-collapse: collapse;
    //tableの外に枠線
    border: 1px solid #707070;
    background: #fff;
    //table: 100%;を３等分する（幅の指定いらない）
    width: 100%;
    table-layout: fixed;



    // ↓↓↓↓↓↓↓ なんで効かない！？！？！？
    font-weight: 700;





    th,
    td {
        font-weight: 700;
        //tableのそれぞれの箱に枠線
        border: 1px solid #707070;
        padding: 0 24px;
        //上下幅の指定してvertical-alignで文字を上下中央(text-align: 58px;だと span との幅にも58pxが当たるから)
        height: 58px;
        vertical-align: middle;
    }

    th {
        background: #999;
        color: #fff;
        //tac
        text-align: center;

        //一部の列だけ幅の指定
        &:nth-child(1) {
            width: 172px;

            @include mq('sp') {
                width: 112px;
            }
        }
    }

    td {
        text-align: right;
    }

    strong {
        color: $color-accent;
        line-height: 1.2;
    }

    span {
        font-weight: 700;
        font-size: 13px;
        display: block;
        margin-top: 1px;
        line-height: 1.2;
    }
}

.price-attention {
    font-size: 14px;
    margin-top: 10px;

    a {
        font-weight: 700;
    }
}

/*=========================
Q&A
=========================*/
.question {

}

.question-inner {

}

.question-head {

}

.question-items {
    margin: 80px auto 0;
    width: 901px;
    max-width: 100%;
}

.question-item {
    display: flex;
    background: $color-main;
    color: #fff;
    font-weight: 700;
    font-size: 16px;
    padding: 12px 20px;

    &:not(:first-child) {
        margin-top: 24px;
    }

    @include mq('sp') {
        padding: 12px 14px;
    }
}

.question-q {

}

.question-title {
    margin-left: 25px;
}

.question-icon {
    margin-left: auto;

    &.is-active {
        .question-bar2 {
            top: 50%;
            transform: translateY(-50%) rotate(0deg);
        }
    }
}

.question-bars {
    position: relative;
    width: 14px;
    height: 100%;
}

.question-bar1,
.question-bar2 {
    width: 14px;
    height: 2px;
    background: #fff;
    position: absolute;
    left: 0;
    top: 0;
}

.question-bar1 {
    top: 50%;
    transform: translateY(-50%);
    left: 0;
}

.question-bar2 {
    top: 50%;
    transform: translateY(-50%) rotate(90deg);
    transition: all 0.3s ease 0s;

}


.question-answer {
    background: #fff;
    color: $color-main;
    font-weight: 700;
    font-size: 16px;
    padding: 16px 30px 16px 20px;
    border: 1px solid $color-main;
    display: none;

    @include mq('sp') {
        padding: 16px 14px 16px 14px;
    }
}


.question-text {
    padding-left: 35px;
    position: relative;

    &::before {
        content: 'A';
        position: absolute;
        top: 0;
        left: 0;
    }
}


/*=========================
access
=========================*/

.access {

}

.access-inner {

}

.access-head {

}

.access-map {
    margin: 80px auto 0;
    width: 800px;
    max-width: 100%;

    @include mq('sp') {
        margin: 40px auto 0;
    }
}



//iframeのサイズの指定方法
.iframe-wrap {
    width: 100%;
    padding-top: 400 / 800 * 100%;
    position: relative;

    iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}



.access-info {
    width: 800px;
    max-width: 100%;
    // dl は初期値でmargin,paddingがついてることがあるから消しとく
    margin: 16px auto 0;
}

.access-info-row {
    display: flex;
    align-items: center;

    //１つ目以外に mt をつける
    &:not(first-child) {
        margin-top: 12px;
    }

    dt {
        // dt,dd は初期値でmargin,paddingがついてることがあるから消しとく
        margin: 0;
        padding: 0;
        font-weight: 700;
        // dt の幅を固定(width = 文字幅＋右の余白)
        width: 104px;
    }

    dd {
        margin: 0;
        padding: 0;
        width: calc(100% - 104px);
    }
}

.access-button {
    text-align: center;
    
    a {
        display: inline-block;
        position: relative;
        width: 304px;
        height: 56px;
        line-height: 56px;
        font-size: inherit;


        &::after {
            position: absolute;
            content: "";
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            width: 20px;
            height: 19px;
            background: url(../img/button-arrow.svg) no-repeat center center / contain;
        }
    }
}

/*=========================
contact
=========================*/

.contact {
    background: #EFEFEF;
}

.contact-inner {

}

.contact__form {
    margin: 80px auto 0;
    width: 800px;
    max-width: 100%;
    background: #fff;
    padding: 60px;

    @include mq('sp') {
        margin: 40px auto 0;
        padding: 30px;
    }
}

.contact-form {

}

.contact-form__dl {

}

.contact-form__row {
    display: flex;

    @include mq('sp') {
        display: block;
    }

    &:not(:first-child) {
        margin-top: 60px;

        @include mq('sp') {
            margin-top: 30px;
        }
    }
}

.contact-form__label {
    width: 161px;
    padding-top: 5px;

    @include mq('sp') {
        width: 100%;
    }

    label {
        font-weight: 700;

        // 「必須」の作り方

        &.is-required {
            display: inline-block;
            position: relative;

            &::after {
                position: absolute;
                content: '必須';
                top: calc(100% + 2px);
                left: 0;
                font-size: 14px;
                font-weight: 700;
                color: #fff;
                background: $color-accent;
                text-align: center;
                border-radius: 4px;
                padding: 3px 8px;
                line-height: 1;

                @include mq('sp') {
                    top: 50%;
                    transform: translateY(-50%);
                    //文字の幅ぶん右にずらす
                    left: calc(100% + 6px);
                    width: 44px;
                }
            }
        }
    }
}

.contact-form__input {
    width: calc(100% - 161px);
    //デフォルトのmargin消去
    margin: 0;
    padding: 0;

    @include mq('sp') {
        width: 100%;
    }

    [type="text"] {

        // inputの初期化で重要
        box-shadow: none;
        border: 1px solid #707070;
        background: #fff;
        padding: 12px 16px; 
        appearance: none;
        border-radius: 0;
        color: inherit;
        font-family: inherit;
        font-size: 14px;
        width: 100%;
    }

    [type="email"] {

        // inputの初期化で重要
        box-shadow: none;
        border: 1px solid #707070;
        background: #fff;
        padding: 12px 16px; 
        appearance: none;
        border-radius: 0;
        color: inherit;
        font-family: inherit;
        font-size: 14px;
        width: 100%;
    }

    select {
        // inputの初期化で重要
        box-shadow: none;
        border: 1px solid #707070;
        padding: 12px 16px; 
        appearance: none;
        border-radius: 0;
        color: inherit;
        font-family: inherit;
        font-size: 14px;
        width: 100%;

        //アイコンの追加方法（ select, input とかには擬似要素が使えないから "bg" で指定）
        background: #fff url(../img/select-arrow.svg) no-repeat right 12px center / 17px 14px;

        @include mq('sp') {
            width: 100%;
        }
    }

    textarea {
        // inputの初期化で重要
        box-shadow: none;
        border: 1px solid #707070;
        background: #fff;
        padding: 12px 16px; 
        appearance: none;
        border-radius: 0;
        color: inherit;
        font-family: inherit;
        font-size: 14px;
        width: 100%;

        height: 240px;
        resize: none;

        @include mq('sp') {
            width: 100%;
        }
    }  
}

.contact-form__radio {
    margin-top: 32px;

    @include mq('sp') {
        margin-top: 16px;
    }

    [type="radio"] {
        //まずデフォルトの丸を無くしてから span の擬似要素として css でデザインする
        display: none;

    }

    span {
        display: inline-block;
        padding-left: 26px;
        margin-right: 36px;
        position: relative;

        @include mq('sp') {
            margin-bottom: 8px;
        }

        //外丸の作り方
        &::before {
            content: "";
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 20px;
            height: 20px;
            border: 1px solid #707070;
            border-radius: 50%;
            background: #fff;
        }

        //内丸の作り方
        &::after {
            content: '';
            width: 10px;
            height: 10px;
            background: $color-main;
            position: absolute;
            left: 5px;
            top: 50%;
            transform: translateY(-50%);
            border-radius: 50%;

            //初期値は見えないようにして、↓
            display: none;
        }
    }

    //チェックしたら出現させる
    // check がついてる時に内丸を発動（ check された input の右にある span に対しての指示）
    [type="radio"]:checked + span{
        &::after {
            display: block;
        }
    }
}

.contact-form__check {
    margin-top: 63px;
    text-align: center;

    @include mq('sp') {
        margin-top: 32px;
    }

    [type="checkbox"] {
        display: none;
    }

    span {
        display: inline-block;
        padding-left: 49px;
        position: relative;

        @include mq('sp') {
            padding-left: 28px;
        }

        a {
            font-weight: 700;
        }

        //box の作り方
        &::before {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 25px;
            height: 25px;
            border: 1px solid #707070;
        }

        // check を bg として加える
        &::after {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            width: 25px;
            height: 25px;

            //アイコンの追加方法（ select, input とかには擬似要素が使えないから "bg" で指定）
            // transparent で背景色を透明にして画像を出現させる
            background: transparent url(../img/check.svg) no-repeat center center / contain;

            //初期値は見えないようにして、↓
            display: none;
        }
    }

    //チェックしたら出現させる
    [type="checkbox"]:checked + span{
        &::after {
            display: block;
        }
    }
}

.contact-form__button {
    margin-top: 35px;
    text-align: center;

    //デザイン＋初期化（ font-family や appearance: none;）
    [type="submit"] { 
        display: inline-block;
        background: $color-main url(../img/button-arrow.svg) no-repeat right 12px center / 17px 16px;
        width: 304px;
        height: 56px;
        font-weight: 700;
        color: #fff;
        border: none;
        border-radius: 8px;
        box-shadow: 0 3px 6px rgba(#000, 0.16);
        font-family: inherit;
        font-size: 16PX;
        appearance: none;
        cursor: pointer;
        position: relative;

        @include mq('sp') {
            width: 100%;
        }
    }
}

/*=========================
modal
=========================*/

.modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 900px;
    height: 652px;
    // 画面が狭まっても左右に幅を残した状態
    max-width: calc(100% - 24px * 2);
    max-height: calc(100% - 24px * 2);
    background: #fff;
    box-shadow: 0 0 3px rgba(#000, 0.16);
    z-index: 300;
    display: none;

}

.modal-area {
    width: 100%;
    padding: 60px;
    position: relative;

    @include mq('sp') {
        padding: 40px;
    }
}

.modal-icon {
    position: absolute;
    top: 0;
    right: 0;
    transform: translate(50%, -50%);
    width: 40px;
    height: 40px;
    background: $color-main;
    border-radius: 50%;
}

.modal-icon__bars {
    position: relative;
    width: 100%;
    height: 100%;
}

.modal-icon__bar1,
.modal-icon__bar2 {
    width: 14px;
    height: 2px;
    background: #fff;
    position: absolute;
    left: 50%;
    top: 50%;
}

.modal-icon__bar1 {
    transform: translate(-50%, -50%) rotate(-45deg);
}

.modal-icon__bar2 {
    transform: translate(-50%, -50%) rotate(45deg);
    transition: all 0.3s ease 0s;
}


.modal-title {
    color: #707070;
    font-size: 24px;
    font-weight: 700;
    position: relative;
    padding-bottom: 24px;
    text-align: center;

    &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 2px;
        background: $color-main;
    }
}



// modal-content のエリアだけ縦にスライド

.modal-content {
    margin-top: 40px;
    color: #707070;
    // calc で計算する時に padding や margin の幅に注意
    // ※なんでか100%から引くと overflow が効かないからmodal-content以外のheightを引いた数
    height: calc(652px - 168px * 2);
    overflow: auto;
}

.modal-content__title {
    font-size: 20px;
    font-weight: 700;
    padding-left: 20px;
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        left: 0;
        background: $color-main;
        width: 4px;
        height: 20px;
    }

    &:not(:first-child) {
        margin-top: 24px;
    }
}

.modal-content__text {
    padding: 16px 0 0 20px;
}

.modal-button {
    text-align: center;
    transition: all 0.3s ease 0s;
    margin-top: 60px;

    &:hover {
        opacity: 0.7;
    }

    a {
        display: inline-block;
        color: #fff;
        font-weight: 700;   
        background: $color-main;
        padding: 16px 0;
        width: 176px;
        border-radius: 8px;
        box-shadow: 0 3px 6px #00000029;
        text-decoration: none;
    }
    
}

.modal-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(#000, 0.3);
    z-index: 299;
    display: none;
}

/*=========================
footer
=========================*/

.footer {
    background: linear-gradient(to bottom,#666666, #333333);
    color: #fff;
    padding: 60px 40px 24px;

    @include mq ('sp') {
        padding: 30px 40px 14px;
    }
}

.footer-inner {

}

.footer-wrapper {
    display: flex;

    @include mq ('sp') {
        display: block;
    }

    @include mq ('tab') {
        display: block;
    }
}

.footer-left {
    width: 34%;

    @include mq ('sp') {
        width: 100%;
    }
}

.footer-logo {

    a {

    }

    img {
        width: 205px;
        height: 40px;
        margin: 0;
        max-width: 100%;
    }
}

.footer-info {

}

.footer-address,
.footer-tel,
.footer-copyright {
    font-size: 14px;
}

.footer-address {
    margin-top: 24px;

    @include mq ('sp') {
        margin-top: 12px;
    }
}

.footer-tel {
    margin-top: 10px;
}

.footer-center {
    width: 52%;

    @include mq ('sp') {
        width: 100%;
        margin-top: 24px;
    }

    @include mq ('tab') {
        margin-top: 24px;
    }
}

.footer-nav {
    display: flex;

    @include mq('sp') {
        display: block;
    }
    
    li {
        transition: all 0.3s ease 0s;

        &:hover {
            opacity: 0.7;
        }

        &:not(:first-child) {
            margin-left: 40px;

            @include mq ('sp') {
                margin-left: 0;
                margin-top: 10px;
            }
        }
    }

    a {
        text-decoration: none;
    }
}

.footer-right {
    width: 12%;
    margin-top: 24px;

    @include mq ('sp') {
        width: 100%;
    }
}

.footer-sns {
    display: flex;
    // flex のときの右寄せは flex-end
    justify-content: flex-end;

    @include mq ('sp') {
        justify-content: unset;
    }

    li {
        transition: all 0.3s ease 0s;

        &:hover {
            opacity: 0.7;
        }

        &:not(:first-child) {
            margin-left: 16px;
        }

        a {

        }
        
        img {
            width: 30px;
            height: 30px;
        }
    }
}

.footer-copyright {
    text-align: center;
    margin-top: 46px;
}

.to-top {
    z-index: 100;
    position: fixed;
    bottom: 24px;
    right: 24px;
    visibility: hidden;
    opacity: 0;
    transition: all 0.6s ease 0s;

    
    &.is-show {
        visibility: visible;
        opacity: 1;
    }

    @include mq ('sp') {
        bottom: 12px;
        right: 12px;
    }

    a {
        transition: all 0.3s ease 0s;

        img {
            width: 60px;

            @include mq ('sp') {
                width: 50px;
            }
        }

        &:hover {
            opacity: 0.7;
        }
    }
    
}

/*=========================
drawer
=========================*/


.drawer-icon {
    position: fixed;
    right: 16px;
    top: 20px;
    z-index: 200;

    @include mq('tab')  {
        display: none;
    }

    @include mq('pc')  {
        display: none;
    }

    //クリックしたときのハンバーガーの動き
    &.is-active {
        //開いた時のiconの位置
        transform: translateX(-200px);
        transition: transform 0.5s ease 0s;


        .drawer-icon__bar1 {
            top: 8px;
            transform: rotate(-45deg);
        }
        
        .drawer-icon__bar2 {
            display: none;
        }
        
        .drawer-icon__bar3 {
            top: 8px;
            transform: rotate(45deg);
        }
    }
}

.drawer-icon__bars {
    width: 22px;
    height: 20px;
    //↓para que?
    display: block;
    position: relative;
}

.drawer-icon__bar1,
.drawer-icon__bar2,
.drawer-icon__bar3 {
    position: absolute;
    width: 22px;
    height: 4px;
    background: #fff;
    top: 0;
    left: 0;
    transition: all 0.5s ease 0s;

}

.drawer-icon__bar1 {
    top: 0;
}

.drawer-icon__bar2 {
    top: 8px;
}

.drawer-icon__bar3 {
    top: 16px;
}

.drawer-contents {
    background: #fff;
    width: 200px;
    height: 100%;
    position: fixed;
    top: 0;
    right: 0;
    box-shadow: 0 0 3px rgba(#000, 0.16);
    //iconよりし下
    z-index: 199;
    transform: translateX(105%);
    transition: transform 0.5s ease 0s;

    &.is-active {
        transform: translateX(0);
    }
}

.drawer-icon__items {

}

.drawer-icon__item {
    border-bottom: #707070 dotted 2px;


    a {
        display: block;
        color: #707070;
        padding: 18px 20px;
        position: relative;

        &::after {
            content: '';
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            right: 21px;
            width: 8px;
            height: 11px;
            background: transparent url(../img/arrow-b.svg) no-repeat center center / contain;
        }
    }
}

.drawer-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(#000, 0.8);
    //drawer-contentsの後ろ
    z-index: 198;
    display: none;

    &.is-active {
        display: block;
    }
}
